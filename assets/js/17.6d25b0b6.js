(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{290:function(e,a,t){"use strict";t.r(a);var o=t(14),r=Object(o.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"views"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#views"}},[e._v("#")]),e._v(" Views")]),e._v(" "),a("h2",{attrs:{id:"miscella"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miscella"}},[e._v("#")]),e._v(" miscella")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Propositions as Types ("),a("a",{attrs:{href:"https://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Philip Wadler's Paper"),a("OutboundLink")],1),e._v(")")]),e._v(" "),a("ol",[a("li",[a("strong",[e._v("propositions as types")]),e._v(". for each proposition in the logic there is a corresponding type in the programming language — and vice versa.")]),e._v(" "),a("li",[a("strong",[e._v("proofs as programs")]),e._v(". for each proof of a given proposition, there is a program (aka. expression) of the corresponding type — and vice versa.")]),e._v(" "),a("li",[a("strong",[e._v("simplification of proofs as evaluation of programs")]),e._v(". for each way to simplify a proof there is a corresponding way to evaluate a program (aka. reduction of expression) — and vice versa.")])])]),e._v(" "),a("li",[a("p",[e._v("Howard’s observation")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("      A × B          ≅      A ∧ B\nCartesian product         Conjunction\n\n      A + B          ≅         A ∨ B\n  Disjoint sum               Disjunction\n\n     A ⊃ B           ≅            A → B\n  Implication                  function space\n\n")])])]),a("ul",[a("li",[e._v("Type")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("A → B → A × B    ≅    A ⇒ B ⇒ A ∧ B\n")])])]),a("ul",[a("li",[a("p",[e._v("Dependent Types: types which are a “function” of the elements of some other type.")])]),e._v(" "),a("li",[a("p",[e._v("Links")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://ncatlab.org/nlab/show/relation+between+type+theory+and+category+theory",target:"_blank",rel:"noopener noreferrer"}},[e._v("nLab - relation between type theory and category theory"),a("OutboundLink")],1)])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);